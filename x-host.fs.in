\ $Id$

\ This file is part of Attila, a retargetable threaded interpreter
\ Copyright (c) 2007--2010, Simon Dobson <simon.dobson@computer.org>.
\ All rights reserved.
\
\ Attila is free software; you can redistribute it and/or
\ modify it under the terms of the GNU General Public License
\ as published by the Free Software Foundation; either version 2
\ of the License, or (at your option) any later version.
\
\ Attila is distributed in the hope that it will be useful,
\ but WITHOUT ANY WARRANTY; without even the implied warranty of
\ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
\ GNU General Public License for more details.
\
\ You should have received a copy of the GNU General Public License
\ along with this program; if not, write to the Free Software
\ Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.

\ Driver file for host cross-compilation

\ ---------- Phase 1 cross-compiler set-up ----------

\ Load the cross-compiler
include cross-compiler/cross-compiler.fs

.( Initialising cross-compiler view of target VM...)
<cross-compiler also cross-compiler
include vm.fs
cross-compiler>


\ ---------- Minimal image population ----------

.( Initialising cross-compiler target image...)
[cross] initialise-image

.( Initialising image with really basic primitives...)
<target
C: USERVAR uservar ( n -- addr )
  addr = (CELL) &image[n];
;C

include c-core.fs
include c-itil.fs
target>


\ ---------- Phase 2 cross-compiler set-up ----------

.( Initialising cross-compiler support...)
<cross-compiler also cross-compiler
\ loop support
include cs-stack.fs
include loop-support.fs

\ loop cross-compilation
include conditionals.fs
include loops.fs
include counted-loops.fs

\ CREATE...>DOES>
: START-DEFINITION ;
: END-DEFINITION ;
include createdoes.fs

\ hooks
include hooks-runtime.fs
include hooks.fs
cross-compiler>


\ ---------- Image population ----------

.( Populating target image...)
<target
\ basic facilities
include ascii.fs
include counted-loops-runtime.fs

\ memory model
include flat-memory-model.fs
include itil-compilation.fs

\ hooks
include hooks-runtime.fs
include system-hooks.fs

\ terminal and file i/o
include c-fileio.fs
include c-io.fs
include type.fs

\ parsing and colon-compilation
include parser.fs
include compilation.fs
include colon.fs

\ code loading
include file.fs
include load.fs
include include.fs

\ interactive executive
include executive.fs

\ start-up behaviour
include startup.fs
target>


\ ---------- Image finalisation and output ----------

.( Finalising target image...)
[CROSS] FINALISE-IMAGE
<TARGET
' START (START) XT!   \ cold start vector (first word executed)
' OUTER EXECUTIVE XT! \ executive (outer interpreter)
TARGET>

.( Saving target image...)
[CODE-GENERATOR] SAVE-IMAGE-AS @abs_builddir@/attila.c

.( Done)

