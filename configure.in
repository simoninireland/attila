# $Id$

# This file is part of Attila, a retargetable threaded interpreter
# Copyright (c) 2007--2010, Simon Dobson <simon.dobson@computer.org>.
# All rights reserved.
#
# Attila is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# Attila is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.

# ---------- Setup ----------

# autoconf and automake magic
AC_INIT(bootstrap.c)
AC_PREREQ(2.54)
VERSION=0.4
AC_SUBST(VERSION)
AM_PROG_CC_STDC
AM_INIT_AUTOMAKE(attila,$VERSION)

# announcements and standard places for the C pre-processor
AC_DEFINE_UNQUOTED(ATTILA_ANNOUNCE,["Attila v.$VERSION: a re-targetable threaded interpreter"],[Program announcement])
AC_DEFINE(ATTILA_COPYRIGHT,["Copyright (c) 2007 -- 2010, Simon Dobson <simon.dobson@computer.org>. Distributed under the GNU GPL"],[Program copyright])
AC_DEFINE(ATTILA_STANDARD_PRELUDE,["prelude.fs"],[Standard prelude])


# ---------- Basic programs ----------

# uncomment if debugging
AC_DEFINE(DEBUGGING,[1])

# compilation and installation
AC_PROG_CC
CFLAGS='-g -DATTILA_STANDARD_INCLUDE_DIR=\"${pkgdatadir}\"'
AC_PROG_INSTALL
AC_C_INLINE

# bootstrapping 
AC_CHECK_PROG(PERL,perl,`which perl`)
test -z $PERL && AC_MSG_ERROR([attila needs a version of perl to bootstrap the system])


# ---------- Sizes, headers, functions and libraries ----------

# standard C types
AC_HEADER_STDC
AC_TYPE_SIZE_T

# sd: we need to expose these at autoconf level to expand x-host.fs.in so we
# can't use AC_CHECK_SIZEOF
AC_TRY_RUN([#include <stdio.h>
main() {
    FILE *f=fopen("conftestval", "w");
    if(!f) exit(1);
    fprintf(f, "%d\n", sizeof(long));
    exit(0);
}], CELL_SIZE=`cat conftestval`)
AC_TRY_RUN([#include <stdio.h>
main() {
    FILE *f=fopen("conftestval", "w");
    if(!f) exit(1);
    fprintf(f, "%d\n", sizeof(long long));
    exit(0);
}], DOUBLE_CELL_SIZE=`cat conftestval`, DOUBLE_SIZE=CELL_SIZE)
AC_TRY_RUN([#include <stdio.h>
main() {
    FILE *f=fopen("conftestval", "w");
    if(!f) exit(1);
    fprintf(f, "%d\n", sizeof(unsigned char));
    exit(0);
}], CHARACTER_SIZE=`cat conftestval`)
AC_SUBST(CELL_SIZE)
AC_SUBST(DOUBLE_CELL_SIZE)
AC_SUBST(CHARACTER_SIZE) 

# endian-ness
AC_C_BIGENDIAN(BIGENDIAN=1, BIGENDIAN=0)
AC_SUBST(BIGENDIAN)

# headers etc
AC_CHECK_HEADER(setjmp.h,,AC_MSG_ERROR([attila needs setjmp.h]))
AC_CHECK_FUNCS(setjmp longjmp)

# libc functions
AC_CHECK_FUNCS(malloc calloc)
AC_CHECK_FUNCS(bcopy bzero strlen strcpy strncpy strncmp strncasecmp toupper strspn strcspn)
AC_CHECK_FUNCS(fgets printf sprintf sscanf)


# ---------- Create files ----------

AC_CONFIG_FILES([
Makefile
vm.fs
bootstrap-vm.fs
x-host.fs
])
AC_OUTPUT

